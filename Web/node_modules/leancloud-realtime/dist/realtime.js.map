{"version":3,"file":null,"sources":["/home/travis/build/leancloud/js-realtime-sdk/src/utils.js","/home/travis/build/leancloud/js-realtime-sdk/src/websocket-plus.js","/home/travis/build/leancloud/js-realtime-sdk/src/errors.js","/home/travis/build/leancloud/js-realtime-sdk/proto/message-compiled.js","/home/travis/build/leancloud/js-realtime-sdk/proto/message.js","/home/travis/build/leancloud/js-realtime-sdk/src/connection.js","/home/travis/build/leancloud/js-realtime-sdk/src/client.js","/home/travis/build/leancloud/js-realtime-sdk/src/signature-factory-runner.js","/home/travis/build/leancloud/js-realtime-sdk/src/messages/message.js","/home/travis/build/leancloud/js-realtime-sdk/src/conversation.js","/home/travis/build/leancloud/js-realtime-sdk/src/conversation-query.js","/home/travis/build/leancloud/js-realtime-sdk/src/im-client.js","/home/travis/build/leancloud/js-realtime-sdk/src/message-parser.js","/home/travis/build/leancloud/js-realtime-sdk/src/messages/helpers.js","/home/travis/build/leancloud/js-realtime-sdk/src/messages/typed-message.js","/home/travis/build/leancloud/js-realtime-sdk/src/messages/text-message.js","/home/travis/build/leancloud/js-realtime-sdk/src/realtime.js"],"sourcesContent":["import isPlainObject from 'lodash/isPlainObject';\nimport { default as d } from 'debug';\n\nexport const tryAll = promiseConstructors => {\n  const promise = new Promise(promiseConstructors[0]);\n  if (promiseConstructors.length === 1) {\n    return promise;\n  }\n  return promise.catch(() => tryAll(promiseConstructors.slice(1)));\n};\n\nexport const tap = interceptor => value => ((interceptor(value), value));\n\nconst debug = d('LC:Cache');\nexport class Cache {\n  constructor(name = 'anonymous') {\n    this.name = name;\n    this._map = {};\n  }\n\n  get(key) {\n    const cache = this._map[key];\n    if (cache) {\n      const expired = cache.expiredAt && cache.expiredAt < Date.now();\n      if (!expired) {\n        debug(`[${this.name}] hit: ${key} ${cache.value}`);\n        return cache.value;\n      }\n      debug(`[${this.name}] expired: ${key}`);\n      delete this._map[key];\n    }\n    debug(`[${this.name}] missed: ${key}`);\n    return null;\n  }\n\n  set(key, value, ttl) {\n    debug(`[${this.name}] set: ${key} ${value} ${ttl}`);\n    const cache = this._map[key] = {\n      value,\n    };\n    if (typeof ttl === 'number') {\n      cache.expiredAt = Date.now() + ttl;\n    }\n  }\n}\n\nexport const decodeDate = date => {\n  if (!date) return date;\n  if (typeof date === 'string') {\n    return new Date(date);\n  }\n  if (date.__type === 'Date' && date.iso) {\n    return new Date(date.iso);\n  }\n  return date;\n};\n\nexport const keyRemap = (keymap, obj) =>\n  Object.keys(obj).reduce((newObj, key) => {\n    const newKey = keymap[key] || key;\n    return Object.assign(newObj, {\n      [newKey]: obj[key],\n    });\n  }, {});\n\nexport const isIE10 = (\n  global.navigator &&\n  global.navigator.userAgent &&\n  global.navigator.userAgent.indexOf('MSIE 10.') !== -1\n);\n\n/* eslint-disable no-proto */\nexport const getStaticProperty = (klass, property) =>\n  (klass[property] || (klass.__proto__ ? getStaticProperty(klass.__proto__, property) : undefined));\n/* eslint-enable no-proto */\n\nexport const union = (a, b) => Array.from(new Set([...a, ...b]));\nexport const difference = (a, b) => Array.from(\n  (bSet => new Set(a.filter(x => !bSet.has(x))))(new Set(b))\n);\n\nconst map = new WeakMap();\n\n// protected property helper\nexport const internal = (object) => {\n  if (!map.has(object)) {\n    map.set(object, {});\n  }\n  return map.get(object);\n};\n\n// debug utility\nconst removeNull = obj => {\n  if (!isPlainObject(obj)) return obj;\n  const object = Object.assign({}, obj);\n  // eslint-disable-next-line no-restricted-syntax\n  for (const prop in object) {\n    if (object.hasOwnProperty(prop)) {\n      const value = object[prop];\n      if (value === null) {\n        delete object[prop];\n      } else {\n        object[prop] = removeNull(value);\n      }\n    }\n  }\n  return object;\n};\nexport const trim = message => removeNull(JSON.parse(JSON.stringify(message)));\n","// WebSocket with auto reconnecting feature, backup endpoint and EventEmitter interface.\n\nimport { tryAll } from './utils';\n\nimport { default as d } from 'debug';\nimport EventEmitter from 'eventemitter3';\nimport StateMachine from 'javascript-state-machine';\n\nimport WebSocket from 'ws';\n\nconst debug = d('LC:WebSocketPlus');\n\nconst HEARTBEAT_TIME = 60000;\nconst TIMEOUT_TIME = 180000;\n\nconst DEFAULT_RETRY_STRATEGY = attempt => Math.min(1000 << attempt, 300000);\n\nconst requireConnected = (target, name, descriptor) =>\n  Object.assign({}, descriptor, {\n    value: function requireConnectedWrapper(...args) {\n      if (!this.is('connected')) {\n        const currentState = this.current;\n        console.warn(`${name} should not be called when the connection is ${currentState}`);\n        if (this.is('offline') || this.is('reconnecting')) {\n          console.warn('disconnect and reconnect event should be handled to avoid such calls.');\n        }\n        throw new Error('Connection unavailable');\n      }\n      return descriptor.value.call(this, ...args);\n    },\n  });\n\nclass WebSocketPlus extends EventEmitter {\n  constructor(getUrls, protocol) {\n    debug('initializing WebSocketPlus');\n    if (typeof WebSocket === 'undefined') {\n      throw new Error('WebSocket is undefined. Polyfill is required in this runtime.');\n    }\n    super();\n    if (typeof getUrls !== 'function') {\n      this._getUrls = () => Promise.resolve(getUrls);\n    } else {\n      this._getUrls = getUrls;\n    }\n    this._protocol = protocol;\n    this.init();\n    this._createWs(this._getUrls, this._protocol).then(\n      () => this.open(),\n      error => this.throw(error)\n    ).catch(this.throw.bind(this));\n    this.__postponeTimers = this._postponeTimers.bind(this);\n  }\n\n  _createWs(getUrls, protocol) {\n    return getUrls().then(wsUrls => {\n      let urls = wsUrls;\n      if (!(urls instanceof Array)) {\n        urls = [urls];\n      }\n      return tryAll(\n        urls.map(url => (resolve, reject) => {\n          debug(`connect [${url}] ${protocol}`);\n          const ws = protocol ? new WebSocket(\n            url, protocol\n          ) : new WebSocket(url);\n          ws.binaryType = this.binaryType || 'arraybuffer';\n          ws.onopen = () => resolve(ws);\n          ws.onerror = error => {\n            if (error instanceof Error) {\n              return reject(error);\n            }\n            // in browser, error event is useless\n            return reject(new Error(`Failed to connect [${url}]`));\n          };\n        })\n      ).then(ws => {\n        this._ws = ws;\n        this._ws.onclose = this._handleClose.bind(this);\n        this._ws.onmessage = this._handleMessage.bind(this);\n        return ws;\n      });\n    });\n  }\n  _destroyWs() {\n    const ws = this._ws;\n    if (!ws) return;\n    ws.onopen = ws.onclose = ws.onerror = ws.onmessage = null;\n    this._ws = null;\n    ws.close();\n  }\n\n  onopen() {\n    debug('open');\n    this.emit('open');\n  }\n  onconnected() {\n    this._startConnectionKeeper();\n  }\n  onleaveconnected() {\n    this._stopConnectionKeeper();\n  }\n  onbeforedisconnect() {\n    debug('disconnect');\n    this.emit('disconnect');\n  }\n  ondisconnect() {\n    this._destroyWs();\n  }\n  onreconnect() {\n    debug('reconnect');\n    this.emit('reconnect');\n  }\n  onoffline(event, from, to, attempt = 0) {\n    const delay = DEFAULT_RETRY_STRATEGY.call(null, attempt);\n    debug(`schedule attempt=${attempt} delay=${delay}`);\n    this.emit('schedule', attempt, delay);\n    if (this.__scheduledRetry) {\n      clearTimeout(this.__scheduledRetry);\n    }\n    this.__scheduledRetry = setTimeout(() => {\n      if (this.is('offline')) {\n        this.retry(attempt);\n      }\n    }, delay);\n  }\n  onretry(event, from, to, attempt = 0) {\n    debug(`retry attempt=${attempt}`);\n    this.emit('retry', attempt);\n    this._createWs(this._getUrls, this._protocol).then(\n      () => this.reconnect(),\n      () => this.fail(attempt + 1)\n    );\n  }\n  onclose() {\n    debug('close');\n    if (this._ws) {\n      this._ws.close();\n    }\n  }\n  onerror(event, from, to, error) {\n    debug('error', error);\n    this.emit('error', error);\n  }\n\n  // jsdoc-ignore-start\n  @requireConnected\n  // jsdoc-ignore-end\n  _ping() {\n    debug('ping');\n    try {\n      this.ping();\n    } catch (error) {\n      console.warn(`websocket ping error: ${error.message}`);\n    }\n  }\n  ping() {\n    if (this._ws.ping) {\n      this._ws.ping();\n    } else {\n      console.warn(`The WebSocket implement does not support sending ping frame.\n        Override ping method to use application defined ping/pong mechanism.`);\n    }\n  }\n\n  _postponeTimers() {\n    debug('_postponeTimers');\n    this._clearTimers();\n    this._heartbeatTimer = setInterval(this._ping.bind(this), HEARTBEAT_TIME);\n    this._timeoutTimer = setTimeout(() => {\n      debug('timeout');\n      this.disconnect();\n    }, TIMEOUT_TIME);\n  }\n  _clearTimers() {\n    if (this._heartbeatTimer) {\n      clearInterval(this._heartbeatTimer);\n    }\n    if (this._timeoutTimer) {\n      clearTimeout(this._timeoutTimer);\n    }\n  }\n  _startConnectionKeeper() {\n    debug('start connection keeper');\n    const addListener = this._ws.addListener || this._ws.addEventListener;\n    addListener.call(this._ws, 'message', this.__postponeTimers);\n    this._postponeTimers();\n  }\n  _stopConnectionKeeper() {\n    debug('stop connection keeper');\n    // websockets/ws#489\n    const removeListener = this._ws.removeListener || this._ws.removeEventListener;\n    removeListener.call(this._ws, 'message', this.__postponeTimers);\n    this._clearTimers();\n  }\n\n  _handleClose(event) {\n    debug(`ws closed [${event.code}] ${event.reason}`);\n    // socket closed manually, ignore close event.\n    if (this.isFinished()) return;\n    this.handleClose(event);\n  }\n  handleClose() {\n    // reconnect\n    this.disconnect();\n  }\n\n  // jsdoc-ignore-start\n  @requireConnected\n  // jsdoc-ignore-end\n  send(data) {\n    debug('send', data);\n    this._ws.send(data);\n  }\n\n  _handleMessage(event) {\n    debug('message', event.data);\n    this.handleMessage(event.data);\n  }\n  handleMessage(message) {\n    this.emit('message', message);\n  }\n}\n\nStateMachine.create({\n  target: WebSocketPlus.prototype,\n  initial: {\n    state: 'initialized',\n    event: 'init',\n    defer: true,\n  },\n  terminal: 'closed',\n  events: [{\n    name: 'open',\n    from: 'initialized',\n    to: 'connected',\n  }, {\n    name: 'disconnect',\n    from: 'connected',\n    to: 'offline',\n  }, {\n    name: 'retry',\n    from: 'offline',\n    to: 'reconnecting',\n  }, {\n    name: 'fail',\n    from: 'reconnecting',\n    to: 'offline',\n  }, {\n    name: 'reconnect',\n    from: 'reconnecting',\n    to: 'connected',\n  }, {\n    name: 'close',\n    from: ['connected', 'offline', 'reconnecting'],\n    to: 'closed',\n  }, {\n    name: 'throw',\n    from: '*',\n    to: 'error',\n  }],\n});\n\nexport default WebSocketPlus;\n","export const CLOSE_NORMAL = {\n  code: 1000,\n};\nexport const CLOSE_ABNORMAL = {\n  code: 1006,\n};\nexport const APP_NOT_AVAILABLE = {\n  code: 4100,\n  message: 'App not exists or realtime message service is disabled.',\n};\nexport const INVALID_LOGIN = {\n  code: 4103,\n  message: 'Malformed clientId.',\n};\nexport const SESSION_REQUIRED = {\n  code: 4105,\n  message: 'Message sent before session opened. ',\n};\nexport const READ_TIMEOUT = {\n  code: 4107,\n};\nexport const LOGIN_TIMEOUT = {\n  code: 4108,\n};\nexport const FRAME_TOO_LONG = {\n  code: 4109,\n};\nexport const INVALID_ORIGIN = {\n  code: 4110,\n  message: 'Access denied by domain whitelist.',\n};\nexport const SESSION_CONFLICT = {\n  code: 4111,\n};\nexport const INTERNAL_ERROR = {\n  code: 4200,\n  message: 'Internal error, please contact LeanCloud for support.',\n};\nexport const SEND_MESSAGE_TIMEOUT = {\n  code: 4201,\n};\nexport const CONVERSATION_SIGNATURE_FAILED = {\n  code: 4302,\n};\nexport const CONVERSATION_NOT_FOUND = {\n  code: 4303,\n};\nexport const CONVERSATION_FULL = {\n  code: 4304,\n};\nexport const CONVERSATION_REJECTED_BY_APP = {\n  code: 4305,\n};\nexport const CONVERSATION_UPDATE_FAILED = {\n  code: 4306,\n};\nexport const CONVERSATION_READ_ONLY = {\n  code: 4307,\n};\nexport const CONVERSATION_NOT_ALLOWED = {\n  code: 4308,\n};\nexport const INVALID_MESSAGING_TARGET = {\n  code: 4401,\n};\nexport const MESSAGE_REJECTED_BY_APP = {\n  code: 4402,\n};\n\nexport const createError = errorMessage => {\n  const {\n    code, reason, appCode, detail,\n    } = errorMessage;\n  const error = new Error(reason || detail);\n  return Object.assign(error, {\n    code, appCode, detail,\n  });\n};\n","module.exports = require(\"protobufjs/dist/protobuf-light\").newBuilder({})['import']({\n    \"package\": \"push_server.messages\",\n    \"options\": {\n        \"objc_class_prefix\": \"AVIM\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"JsonObjectMessage\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"string\",\n                    \"name\": \"data\",\n                    \"id\": 1\n                }\n            ]\n        },\n        {\n            \"name\": \"UnreadTuple\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"int32\",\n                    \"name\": \"unread\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"mid\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"timestamp\",\n                    \"id\": 4\n                }\n            ]\n        },\n        {\n            \"name\": \"LogItem\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"from\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"data\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"timestamp\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"msgId\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"ackAt\",\n                    \"id\": 5\n                }\n            ]\n        },\n        {\n            \"name\": \"LoginCommand\",\n            \"fields\": []\n        },\n        {\n            \"name\": \"DataCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"ids\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"JsonObjectMessage\",\n                    \"name\": \"msg\",\n                    \"id\": 2\n                }\n            ]\n        },\n        {\n            \"name\": \"SessionCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"n\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"s\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"ua\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"r\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"tag\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"deviceId\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"sessionPeerIds\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"onlineSessionPeerIds\",\n                    \"id\": 9\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"st\",\n                    \"id\": 10\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"stTtl\",\n                    \"id\": 11\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"code\",\n                    \"id\": 12\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"reason\",\n                    \"id\": 13\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"deviceToken\",\n                    \"id\": 14\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"sp\",\n                    \"id\": 15\n                }\n            ]\n        },\n        {\n            \"name\": \"ErrorCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"int32\",\n                    \"name\": \"code\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"string\",\n                    \"name\": \"reason\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"appCode\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"detail\",\n                    \"id\": 4\n                }\n            ]\n        },\n        {\n            \"name\": \"DirectCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"msg\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"uid\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"fromPeerId\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"timestamp\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"offline\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"hasMore\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"toPeerIds\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"r\",\n                    \"id\": 10\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 11\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"id\",\n                    \"id\": 12\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"transient\",\n                    \"id\": 13\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"dt\",\n                    \"id\": 14\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"roomId\",\n                    \"id\": 15\n                }\n            ]\n        },\n        {\n            \"name\": \"AckCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"code\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"reason\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"mid\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"uid\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"fromts\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"tots\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"type\",\n                    \"id\": 9\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"ids\",\n                    \"id\": 10\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"appCode\",\n                    \"id\": 11\n                }\n            ]\n        },\n        {\n            \"name\": \"UnreadCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"UnreadTuple\",\n                    \"name\": \"convs\",\n                    \"id\": 1\n                }\n            ]\n        },\n        {\n            \"name\": \"ConvCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"m\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"transient\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"unique\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cdate\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"initBy\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"sort\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"limit\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"skip\",\n                    \"id\": 9\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"flag\",\n                    \"id\": 10\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"count\",\n                    \"id\": 11\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"udate\",\n                    \"id\": 12\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 13\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"n\",\n                    \"id\": 14\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"s\",\n                    \"id\": 15\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"JsonObjectMessage\",\n                    \"name\": \"results\",\n                    \"id\": 100\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"JsonObjectMessage\",\n                    \"name\": \"where\",\n                    \"id\": 101\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"JsonObjectMessage\",\n                    \"name\": \"attr\",\n                    \"id\": 103\n                }\n            ]\n        },\n        {\n            \"name\": \"RoomCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"roomId\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"s\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"n\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"transient\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"roomPeerIds\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"byPeerId\",\n                    \"id\": 7\n                }\n            ]\n        },\n        {\n            \"name\": \"LogsCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"l\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"limit\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"tt\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"tmid\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"mid\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"checksum\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"stored\",\n                    \"id\": 9\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"LogItem\",\n                    \"name\": \"logs\",\n                    \"id\": 105\n                }\n            ]\n        },\n        {\n            \"name\": \"RcpCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"id\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"ReadTuple\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"timestamp\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"mid\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"ReadCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"cids\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"ReadTuple\",\n                    \"name\": \"convs\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"PresenceCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"StatusType\",\n                    \"name\": \"status\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"sessionPeerIds\",\n                    \"id\": 2\n                }\n            ]\n        },\n        {\n            \"name\": \"ReportCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"initiative\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"type\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"data\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"GenericCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"CommandType\",\n                    \"name\": \"cmd\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"OpType\",\n                    \"name\": \"op\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"appId\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"peerId\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"i\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"installationId\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"LoginCommand\",\n                    \"name\": \"loginMessage\",\n                    \"id\": 100\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"DataCommand\",\n                    \"name\": \"dataMessage\",\n                    \"id\": 101\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"SessionCommand\",\n                    \"name\": \"sessionMessage\",\n                    \"id\": 102\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"ErrorCommand\",\n                    \"name\": \"errorMessage\",\n                    \"id\": 103\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"DirectCommand\",\n                    \"name\": \"directMessage\",\n                    \"id\": 104\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"AckCommand\",\n                    \"name\": \"ackMessage\",\n                    \"id\": 105\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"UnreadCommand\",\n                    \"name\": \"unreadMessage\",\n                    \"id\": 106\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"ReadCommand\",\n                    \"name\": \"readMessage\",\n                    \"id\": 107\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"RcpCommand\",\n                    \"name\": \"rcpMessage\",\n                    \"id\": 108\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"LogsCommand\",\n                    \"name\": \"logsMessage\",\n                    \"id\": 109\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"ConvCommand\",\n                    \"name\": \"convMessage\",\n                    \"id\": 110\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"RoomCommand\",\n                    \"name\": \"roomMessage\",\n                    \"id\": 111\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"PresenceCommand\",\n                    \"name\": \"presenceMessage\",\n                    \"id\": 112\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"ReportCommand\",\n                    \"name\": \"reportMessage\",\n                    \"id\": 113\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"CommandType\",\n            \"values\": [\n                {\n                    \"name\": \"session\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"conv\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"direct\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"ack\",\n                    \"id\": 3\n                },\n                {\n                    \"name\": \"rcp\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"unread\",\n                    \"id\": 5\n                },\n                {\n                    \"name\": \"logs\",\n                    \"id\": 6\n                },\n                {\n                    \"name\": \"error\",\n                    \"id\": 7\n                },\n                {\n                    \"name\": \"login\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"data\",\n                    \"id\": 9\n                },\n                {\n                    \"name\": \"room\",\n                    \"id\": 10\n                },\n                {\n                    \"name\": \"read\",\n                    \"id\": 11\n                },\n                {\n                    \"name\": \"presence\",\n                    \"id\": 12\n                },\n                {\n                    \"name\": \"report\",\n                    \"id\": 13\n                },\n                {\n                    \"name\": \"echo\",\n                    \"id\": 14\n                }\n            ]\n        },\n        {\n            \"name\": \"OpType\",\n            \"values\": [\n                {\n                    \"name\": \"open\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"add\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"remove\",\n                    \"id\": 3\n                },\n                {\n                    \"name\": \"close\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"opened\",\n                    \"id\": 5\n                },\n                {\n                    \"name\": \"closed\",\n                    \"id\": 6\n                },\n                {\n                    \"name\": \"query\",\n                    \"id\": 7\n                },\n                {\n                    \"name\": \"query_result\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"conflict\",\n                    \"id\": 9\n                },\n                {\n                    \"name\": \"added\",\n                    \"id\": 10\n                },\n                {\n                    \"name\": \"removed\",\n                    \"id\": 11\n                },\n                {\n                    \"name\": \"start\",\n                    \"id\": 30\n                },\n                {\n                    \"name\": \"started\",\n                    \"id\": 31\n                },\n                {\n                    \"name\": \"joined\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"members_joined\",\n                    \"id\": 33\n                },\n                {\n                    \"name\": \"left\",\n                    \"id\": 39\n                },\n                {\n                    \"name\": \"members_left\",\n                    \"id\": 40\n                },\n                {\n                    \"name\": \"results\",\n                    \"id\": 42\n                },\n                {\n                    \"name\": \"count\",\n                    \"id\": 43\n                },\n                {\n                    \"name\": \"result\",\n                    \"id\": 44\n                },\n                {\n                    \"name\": \"update\",\n                    \"id\": 45\n                },\n                {\n                    \"name\": \"updated\",\n                    \"id\": 46\n                },\n                {\n                    \"name\": \"mute\",\n                    \"id\": 47\n                },\n                {\n                    \"name\": \"unmute\",\n                    \"id\": 48\n                },\n                {\n                    \"name\": \"join\",\n                    \"id\": 80\n                },\n                {\n                    \"name\": \"invite\",\n                    \"id\": 81\n                },\n                {\n                    \"name\": \"leave\",\n                    \"id\": 82\n                },\n                {\n                    \"name\": \"kick\",\n                    \"id\": 83\n                },\n                {\n                    \"name\": \"reject\",\n                    \"id\": 84\n                },\n                {\n                    \"name\": \"invited\",\n                    \"id\": 85\n                },\n                {\n                    \"name\": \"kicked\",\n                    \"id\": 86\n                },\n                {\n                    \"name\": \"upload\",\n                    \"id\": 100\n                },\n                {\n                    \"name\": \"uploaded\",\n                    \"id\": 101\n                }\n            ]\n        },\n        {\n            \"name\": \"StatusType\",\n            \"values\": [\n                {\n                    \"name\": \"on\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"off\",\n                    \"id\": 2\n                }\n            ]\n        }\n    ]\n}).build();\n","import messages from './message-compiled';\n\nconst {\n  JsonObjectMessage,\n  UnreadTuple,\n  LogItem,\n  LoginCommand,\n  DataCommand,\n  SessionCommand,\n  ErrorCommand,\n  DirectCommand,\n  AckCommand,\n  UnreadCommand,\n  ConvCommand,\n  RoomCommand,\n  LogsCommand,\n  RcpCommand,\n  ReadTuple,\n  ReadCommand,\n  PresenceCommand,\n  ReportCommand,\n  GenericCommand,\n  CommandType,\n  OpType,\n  StatusType,\n} = messages.push_server.messages;\n\nexport {\n  JsonObjectMessage,\n  UnreadTuple,\n  LogItem,\n  LoginCommand,\n  DataCommand,\n  SessionCommand,\n  ErrorCommand,\n  DirectCommand,\n  AckCommand,\n  UnreadCommand,\n  ConvCommand,\n  RoomCommand,\n  LogsCommand,\n  RcpCommand,\n  ReadTuple,\n  ReadCommand,\n  PresenceCommand,\n  ReportCommand,\n  GenericCommand,\n  CommandType,\n  OpType,\n  StatusType,\n};\n","import WebSocketPlus from './websocket-plus';\nimport { createError } from './errors';\nimport { GenericCommand, CommandType } from '../proto/message';\nimport { default as d } from 'debug';\nimport { trim } from './utils';\n\nconst debug = d('LC:Connection');\n\nconst COMMAND_TIMEOUT = 20000;\n\nexport default class Connection extends WebSocketPlus {\n  constructor(getUrl, { format, version }) {\n    debug('initializing Connection');\n    const protocolString = `lc.${format}.${version}`;\n    super(getUrl, protocolString);\n    this._protocalFormat = format;\n    this._commands = {};\n    this._serialId = 0;\n  }\n\n  send(command, waitingForRespond = true) {\n    let serialId;\n    if (waitingForRespond) {\n      serialId = ++ this._serialId;\n      command.i = serialId; // eslint-disable-line no-param-reassign\n    }\n    debug('↑', trim(command), 'sent');\n\n    let message;\n    if (this._protocalFormat === 'protobase64') {\n      message = command.toBase64();\n    } else {\n      if (command.toBuffer) {\n        message = command.toBuffer();\n      } else if (command.toArrayBuffer) {\n        message = command.toArrayBuffer();\n      }\n    }\n    if (!message) {\n      throw new TypeError(`${command} is not a GenericCommand`);\n    }\n\n    super.send(message);\n\n    if (!waitingForRespond) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      this._commands[serialId] = {\n        resolve,\n        reject,\n      };\n      setTimeout(\n        () => {\n          if (this._commands[serialId]) {\n            debug('✗', trim(command), 'timeout');\n            reject(new Error('Command Timeout.'));\n            delete this._commands[serialId];\n          }\n        },\n        COMMAND_TIMEOUT\n      );\n    });\n  }\n\n  handleMessage(msg) {\n    let message;\n    try {\n      message = GenericCommand.decode(msg);\n      debug('↓', trim(message), 'received');\n    } catch (e) {\n      console.warn('Decode message failed', msg);\n    }\n    this.emit('allmessage', message);\n    const serialId = message.i;\n    if (serialId) {\n      if (this._commands[serialId]) {\n        if (message.cmd === CommandType.error) {\n          this\n            ._commands[serialId]\n            .reject(createError(message.errorMessage));\n        } else {\n          this\n            ._commands[serialId]\n            .resolve(message);\n        }\n        delete this._commands[serialId];\n      } else {\n        console.warn(`Unexpected command received with serialId [${serialId}],\n         which have timed out or never been requested.`);\n      }\n    } else {\n      if (message.cmd === CommandType.error) {\n        this.emit('error', createError(message.errorMessage));\n      } else {\n        this.emit('message', message);\n      }\n    }\n  }\n\n  ping() {\n    return this.send(new GenericCommand({\n      cmd: 'echo',\n    })).catch(error => console.warn('ping failed:', error));\n  }\n}\n","import EventEmitter from 'eventemitter3';\n\nexport default class Client extends EventEmitter {\n  constructor(id, options = {}, connection, props) {\n    if (!(id === undefined || typeof id === 'string')) {\n      throw new TypeError(`Client id [${id}] is not a String`);\n    }\n    super();\n    Object.assign(this, {\n      id,\n      _connection: connection,\n      options,\n    }, props);\n  }\n\n  /**\n   * @abstract\n   */\n  _dispatchMessage(message) {\n    this.emit('message', message);\n  }\n}\n","import { tap } from './utils';\nimport { default as d } from 'debug';\n\nconst debug = d('LC:SignatureFactoryRunner');\n\nfunction _validateSignature(signatureResult = {}) {\n  const {\n    signature,\n    timestamp,\n    nonce,\n  } = signatureResult;\n  if (typeof signature !== 'string'\n      || typeof timestamp !== 'number'\n      || typeof nonce !== 'string') {\n    throw new Error('malformed signature');\n  }\n  return {\n    signature,\n    timestamp,\n    nonce,\n  };\n}\n\nexport const run = (signatureFactory, params) =>\n  Promise.resolve()\n    .then(() => {\n      debug(`call signatureFactory with ${params}`);\n      return signatureFactory.apply(null, params);\n    })\n    .then(\n      tap(signatureResult => debug('sign result', signatureResult)),\n      error => {\n        // eslint-disable-next-line no-param-reassign\n        error.message = `sign error: ${error.message}`;\n        debug(error);\n        throw error;\n      }\n    )\n    .then(_validateSignature);\n","import uuid from 'uuid';\n\nexport default class Message {\n  /**\n   * @implements AVMessage\n   * @param  {Object|String} content 消息内容\n   */\n  constructor(content) {\n    Object.assign(this, { content }, {\n      /**\n       * @type {String}\n       * @memberof Message#\n       */\n      id: uuid.v4(),\n      /**\n       * 消息所在的 conversation id\n       * @memberof Message#\n       * @type {String?}\n       */\n      cid: null,\n      /**\n       * 时间戳\n       * @memberof Message#\n       * @type {Date}\n       */\n      timestamp: new Date(),\n      /**\n       * 消息发送者\n       * @memberof Message#\n       * @type {String}\n       */\n      from: undefined,\n      /**\n       * 标记需要回执\n       * @memberof Message#\n       * @type {Boolean}\n       */\n      needReceipt: false,\n      /**\n       * 标记暂态消息\n       * @memberof Message#\n       * @type {Boolean}\n       */\n      transient: false,\n    });\n  }\n\n  /**\n   * 设置是否需要回执\n   * @param {Boolean} needReceipt\n   * @return {Message} self\n   */\n  setNeedReceipt(needReceipt) {\n    this.needReceipt = needReceipt;\n    return this;\n  }\n\n  /**\n   * 设置是否是暂态消息\n   * @param {Boolean} transient\n   * @return {Message} self\n   */\n  setTransient(transient) {\n    this.transient = transient;\n    return this;\n  }\n\n  /**\n   * 将当前消息序列化为 JSON 对象\n   * @protected\n   * @return {Object}\n   */\n  toJSON() {\n    return this.content;\n  }\n\n  /**\n   * 判断给定的内容是否是有效的 Message，\n   * 该方法始终返回 true\n   * @protected\n   * @returns {Boolean}\n   * @implements AVMessage.validate\n   */\n  static validate() {\n    return true;\n  }\n\n  /**\n   * 解析处理消息内容\n   * <pre>\n   * 如果子类提供了 message，返回该 message\n   * 如果没有提供，将 json 作为 content 实例化一个 Message\n   * @protected\n   * @param  {Object}  json    json 格式的消息内容\n   * @param  {Message} message 子类提供的 message\n   * @return {Message}\n   * @implements AVMessage.parse\n   */\n  static parse(json, message) {\n    return message || new this(json);\n  }\n}\n","import EventEmitter from 'eventemitter3';\nimport { decodeDate, keyRemap, union, difference } from './utils';\nimport IMClient from './im-client';\nimport {\n  GenericCommand,\n  ConvCommand,\n  JsonObjectMessage,\n  DirectCommand,\n  LogsCommand,\n} from '../proto/message';\nimport { run as runSignatureFactory } from './signature-factory-runner';\nimport { createError } from './errors';\nimport Message from './messages/message';\nimport isEmpty from 'lodash/isEmpty';\nimport isPlainObject from 'lodash/isPlainObject';\nimport { default as d } from 'debug';\n\nconst debug = d('LC:Conversation');\n\nexport default class Conversation extends EventEmitter {\n  /**\n   * 无法直接实例化，请使用 {@link IMClient#createConversation} 创建新的对话\n   */\n  constructor(data, client) {\n    super();\n    Object.assign(this, {\n      /**\n       * @var id {String} 对话 id，对应 _Conversation 表中的 objectId\n       * @memberof Conversation#\n       */\n      // id,\n      /**\n       * @var creator {String} 对话创建者\n       * @memberof Conversation#\n       */\n      // creator,\n      /**\n       * @var createdAt {Date} 对话创建时间\n       * @memberof Conversation#\n       */\n      // createdAt,\n      /**\n       * @var updatedAt {Date} 对话更新时间\n       * @memberof Conversation#\n       */\n      // updatedAt,\n      /**\n       * @var lastMessageAt {Date} 最后一条消息时间\n       * @memberof Conversation#\n       */\n      // lastMessageAt,\n      /**\n       * @var lastMessage {?Message} 最后一条消息\n       * @memberof Conversation#\n       */\n      // lastMessage,\n      /**\n       * 对该对话设置了静音的用户列表\n       * @memberof Conversation#\n       * @type {?String[]}\n       */\n      mutedMembers: [],\n      /**\n       * 参与该对话的用户列表\n       * @memberof Conversation#\n       * @type {String[]}\n       */\n      members: [],\n      _attributes: {},\n      /**\n       * 暂态对话标记\n       * @memberof Conversation#\n       * @type {Boolean}\n       */\n      transient: false,\n      /**\n       * 当前用户静音该对话标记\n       * @memberof Conversation#\n       * @type {Boolean}\n       */\n      muted: false,\n      /**\n       * 当前用户在该对话的未读消息数\n       * @memberof Conversation#\n       * @type {Number}\n       */\n      unreadMessagesCount: 0,\n    }, keyRemap({\n      attributes: '_attributes',\n      name: '_name',\n    }, data));\n    this.members = Array.from(new Set(this.members));\n    if (client instanceof IMClient) {\n      this._client = client;\n    } else {\n      throw new TypeError('Conversation must be initialized with a client');\n    }\n    [\n      'kicked',\n      'membersjoined',\n      'membersleft',\n      'message',\n    ].forEach(event => this.on(\n      event,\n      payload => this._debug(`${event} event emitted.`, payload)\n    ));\n  }\n\n  set createdAt(value) {\n    this._createdAt = decodeDate(value);\n  }\n  get createdAt() {\n    return this._createdAt;\n  }\n  set updatedAt(value) {\n    this._updatedAt = decodeDate(value);\n  }\n  get updatedAt() {\n    return this._updatedAt;\n  }\n  set lastMessageAt(value) {\n    this._lastMessageAt = decodeDate(value);\n  }\n  get lastMessageAt() {\n    return this._lastMessageAt;\n  }\n\n  /**\n   * 对话额外属性\n   * @type {Object}\n   */\n  get attributes() {\n    if (typeof this._pendingAttributes !== 'undefined') {\n      return this._pendingAttributes;\n    }\n    return this._attributes;\n  }\n  set attributes(value) {\n    this.setAttributes(value);\n  }\n  /**\n   * 设置对话额外属性\n   * @param {Object} map    key-value 对\n   * @param {assign} [assign=false] 使用 Object.assign 更新属性，而不是替换整个 attributes\n   * @return {Conversation} self\n   */\n  setAttributes(map, assign = false) {\n    this._debug(`set attributes: value=${JSON.stringify(map)}, assign=${assign}`);\n    if (!isPlainObject(map)) {\n      throw new TypeError('attributes must be a plain object');\n    }\n    if (!assign) {\n      this._pendingAttributes = map;\n    } else {\n      this._pendingAttributes = Object.assign({}, this.attributes, map);\n    }\n    return this;\n  }\n  /**\n   * 设置对话额外属性\n   * @param {String} key\n   * @param {*} value\n   * @return {Conversation} self\n   */\n  setAttribute(key, value) {\n    if (typeof this._pendingAttributes === 'undefined') {\n      this._pendingAttributes = {};\n    }\n    this._pendingAttributes[key] = value;\n    return this;\n  }\n  /**\n   * 对话名字\n   * @type {String}\n   */\n  get name() {\n    if (typeof this._pendingName !== 'undefined') {\n      return this._pendingName;\n    }\n    return this._name;\n  }\n  set name(value) {\n    this.setName(value);\n  }\n  /**\n   * 设置对话名字\n   * @param {String} value\n   * @return {Conversation} self\n   */\n  setName(value) {\n    this._debug(`set name: ${value}`);\n    this._pendingName = value;\n    return this;\n  }\n\n  _debug(...params) {\n    debug(...params, `[${this.id}]`);\n  }\n\n  _send(command, ...args) {\n    /* eslint-disable no-param-reassign */\n    if (command.cmd === null) {\n      command.cmd = 'conv';\n    }\n    if (command.cmd === 'conv' && command.convMessage === null) {\n      command.convMessage = new ConvCommand();\n    }\n    if (command.convMessage && command.convMessage.cid === null) {\n      command.convMessage.cid = this.id;\n    }\n    /* eslint-enable no-param-reassign */\n    return this._client._send(command, ...args);\n  }\n  /**\n   * 保存当前对话的属性至服务器\n   * @return {Promise.<Conversation>} self\n   */\n  save() {\n    this._debug('save');\n    const attr = {};\n    if (typeof this._pendingAttributes !== 'undefined') {\n      attr.attr = this._pendingAttributes;\n    }\n    if (typeof this._pendingName !== 'undefined') {\n      attr.name = this._pendingName;\n    }\n    if (isEmpty(attr)) {\n      this._debug('nothing touched, resolve with self');\n      return Promise.resolve(this);\n    }\n    this._debug(`attr: ${JSON.stringify(attr)}`);\n    const convMessage = new ConvCommand({\n      attr: new JsonObjectMessage({\n        data: JSON.stringify(attr),\n      }),\n    });\n    return this\n      ._send(new GenericCommand({\n        op: 'update',\n        convMessage,\n      }))\n      .then(resCommand => {\n        this.updatedAt = resCommand.convMessage.udate;\n        if (typeof this._pendingAttributes !== 'undefined') {\n          this._attributes = this._pendingAttributes;\n          delete this._pendingAttributes;\n        }\n        if (typeof this._pendingName !== 'undefined') {\n          this._name = this._pendingName;\n          delete this._pendingName;\n        }\n        return this;\n      });\n  }\n\n  /**\n   * 从服务器更新对话的属性\n   * @return {Promise.<Conversation>} self\n   */\n  fetch() {\n    return this\n      ._client\n      .getQuery()\n      .equalTo('objectId', this.id)\n      .find()\n      .then(() => this);\n  }\n\n  /**\n   * 静音，客户端拒绝收到服务器端的离线推送通知\n   * @return {Promise.<Conversation>} self\n   */\n  mute() {\n    this._debug('mute');\n    return this._send(new GenericCommand({\n      op: 'mute',\n    })).then(() => {\n      if (!this.transient) {\n        this.muted = true;\n        this.mutedMembers = union(this.mutedMembers, [this._client.id]);\n      }\n      return this;\n    });\n  }\n\n  /**\n   * 取消静音\n   * @return {Promise.<Conversation>} self\n   */\n  unmute() {\n    this._debug('unmute');\n    return this._send(new GenericCommand({\n      op: 'unmute',\n    })).then(() => {\n      if (!this.transient) {\n        this.muted = false;\n        this.mutedMembers = difference(this.mutedMembers, [this._client.id]);\n      }\n      return this;\n    });\n  }\n\n  /**\n   * 获取对话人数，或暂态对话的在线人数\n   * @return {Promise.<Number>}\n   */\n  count() {\n    this._debug('unmute');\n    return this._send(new GenericCommand({\n      op: 'count',\n    })).then(resCommand => resCommand.convMessage.count);\n  }\n\n  /**\n   * 增加成员\n   * @param {String|String[]} clientIds 新增成员 client id\n   * @return {Promise.<Conversation>} self\n   */\n  add(clientIds) {\n    this._debug('add', clientIds);\n    if (typeof clientIds === 'string') {\n      clientIds = [clientIds]; // eslint-disable-line no-param-reassign\n    }\n    const convMessage = new ConvCommand({\n      m: clientIds,\n    });\n    return Promise.resolve(\n      new GenericCommand({\n        op: 'add',\n        convMessage,\n      })\n    )\n    .then(command => {\n      if (this._client.options.conversationSignatureFactory) {\n        const params = [this.id, this._client.id, clientIds.sort(), 'add'];\n        return runSignatureFactory(this._client.options.conversationSignatureFactory, params)\n          .then(signatureResult => {\n            Object.assign(command.convMessage, keyRemap({\n              signature: 's',\n              timestamp: 't',\n              nonce: 'n',\n            }, signatureResult));\n            return command;\n          });\n      }\n      return command;\n    })\n    .then(this._send.bind(this))\n    .then(() => {\n      if (!this.transient) {\n        this.members = union(this.members, clientIds);\n      }\n      return this;\n    });\n  }\n\n  /**\n   * 剔除成员\n   * @param {String|String[]} clientIds 成员 client id\n   * @return {Promise.<Conversation>} self\n   */\n  remove(clientIds) {\n    this._debug('remove', clientIds);\n    if (typeof clientIds === 'string') {\n      clientIds = [clientIds]; // eslint-disable-line no-param-reassign\n    }\n    const convMessage = new ConvCommand({\n      m: clientIds,\n    });\n    return Promise.resolve(\n      new GenericCommand({\n        op: 'remove',\n        convMessage,\n      })\n    )\n    .then(command => {\n      if (this._client.options.conversationSignatureFactory) {\n        const params = [this.id, this._client.id, clientIds.sort(), 'remove'];\n        return runSignatureFactory(this._client.options.conversationSignatureFactory, params)\n          .then(signatureResult => {\n            Object.assign(command.convMessage, keyRemap({\n              signature: 's',\n              timestamp: 't',\n              nonce: 'n',\n            }, signatureResult));\n            return command;\n          });\n      }\n      return command;\n    })\n    .then(this._send.bind(this))\n    .then(() => {\n      if (!this.transient) {\n        this.members = difference(this.members, clientIds);\n      }\n      return this;\n    });\n  }\n\n  /**\n   * （当前用户）加入该对话\n   * @return {Promise.<Conversation>} self\n   */\n  join() {\n    this._debug('join');\n    return this.add(this._client.id);\n  }\n\n  /**\n   * （当前用户）退出该对话\n   * @return {Promise.<Conversation>} self\n   */\n  quit() {\n    this._debug('quit');\n    return this.remove(this._client.id);\n  }\n\n  /**\n   * 发送消息\n   * @param  {Message} message 消息，Message 及其子类的实例\n   * @return {Promise.<Message>} 发送的消息\n   */\n  send(message) {\n    this._debug(message, 'send');\n    if (!(message instanceof Message)) {\n      throw new TypeError(`${message} is not a Message`);\n    }\n    Object.assign(message, {\n      cid: this.id,\n      from: this._client.id,\n    });\n    let msg = message.toJSON();\n    if (typeof msg !== 'string') {\n      msg = JSON.stringify(msg);\n    }\n    let sendPromise = this._send(new GenericCommand({\n      cmd: 'direct',\n      directMessage: new DirectCommand({\n        msg,\n        cid: this.id,\n        r: message.needReceipt,\n        transient: message.transient,\n        dt: message.id,\n      }),\n    }), !message.transient);\n    if (!message.transient) {\n      sendPromise = sendPromise.then(resCommand => {\n        const {\n          ackMessage: {\n            uid,\n            t,\n            code,\n            reason,\n            appCode,\n            },\n          } = resCommand;\n        if (code !== null) {\n          throw createError({\n            code, reason, appCode,\n          });\n        }\n        Object.assign(message, {\n          id: uid,\n          timestamp: new Date(t.toNumber()),\n        });\n        this.lastMessage = message;\n        this.lastMessageAt = message.timestamp;\n        return message;\n      });\n    }\n    return sendPromise;\n  }\n\n  /**\n   * 查询消息记录\n   * 如果仅需实现消息记录翻页查询需求，建议使用 {@link Conversation#createMessagesIterator}\n   * @param  {Object} [options]\n   * @param  {Date}   [options.beforeTime] 限制查询结果为小于这个该时间之前的消息，不传则为当前时间\n   * @param  {String} [options.beforeMessageId] 限制查询结果为该消息之前的消息，需要与 beforeTime 同时使用，为防止某时刻有重复消息\n   * @param  {Date}   [options.afterTime] 限制查询结果为大于这个该时间之前的消息\n   * @param  {String} [options.afterMessageId] 限制查询结果为该消息之后的消息，需要与 afterTime 同时使用，为防止某时刻有重复消息\n   * @param  {Number} [options.limit] 限制查询结果的数量，目前服务端默认为 20\n   * @return {Promise.<Message[]>} 消息列表\n   */\n  queryMessages(options = {}) {\n    this._debug('query messages', options);\n    if (options.beforeMessageId && !options.beforeTime) {\n      throw new Error('query option beforeMessageId must be used with option beforeTime');\n    }\n    if (options.afterMessageId && !options.afterTime) {\n      throw new Error('query option afterMessageId must be used with option afterTime');\n    }\n    const conditions = keyRemap({\n      beforeTime: 't',\n      beforeMessageId: 'mid',\n      afterTime: 'tt',\n      afterMessageId: 'tmid',\n      limit: 'l',\n    }, options);\n    if (conditions.t instanceof Date) {\n      conditions.t = conditions.t.getTime();\n    }\n    if (conditions.tt instanceof Date) {\n      conditions.tt = conditions.tt.getTime();\n    }\n    return this._send(new GenericCommand({\n      cmd: 'logs',\n      logsMessage: new LogsCommand(\n        Object.assign(conditions, {\n          cid: this.id,\n        })\n      ),\n    })).then(resCommand =>\n      resCommand.logsMessage.logs.map(log => {\n        const messageProps = {\n          id: log.msgId,\n          cid: this.id,\n          timestamp: new Date(log.timestamp.toNumber()),\n          from: log.from,\n        };\n        const message = this._client._messageParser.parse(log.data);\n        Object.assign(message, messageProps);\n        return message;\n      })\n    );\n  }\n\n  /**\n   * 获取消息翻页迭代器\n   * @param  {Object} [options]\n   * @param  {Date}   [options.beforeTime] 限制起始查询结果为小于这个该时间之前的消息，不传则为当前时间\n   * @param  {String} [options.beforeMessageId] 限制起始查询结果为该消息之前的消息，需要与 beforeTime 同时使用，为防止某时刻有重复消息\n   * @param  {Number} [options.limit] 限制每页查询结果的数量，目前服务端默认为 20\n   * @return {AsyncIterater.<Promise.<IteratorResult<Message[]>>>} [AsyncIterator]{@link https://github.com/tc39/proposal-async-iteration}，调用其 next 方法返回获取下一页消息的 Promise\n   * @example\n   * var messageIterator = conversation.createMessagesIterator({ limit: 10 });\n   * messageIterator.next().then(function(result) {\n   *   // result: {\n   *   //   value: [message1, ..., message10],\n   *   //   done: false,\n   *   // }\n   * });\n   * messageIterator.next().then(function(result) {\n   *   // result: {\n   *   //   value: [message11, ..., message20],\n   *   //   done: false,\n   *   // }\n   * });\n   * messageIterator.next().then(function(result) {\n   *   // No more messages\n   *   // result: { value: [], done: true }\n   * });\n   */\n  createMessagesIterator({ beforeTime, beforeMessageId, limit } = {}) {\n    let promise;\n    return {\n      next: () => {\n        if (promise === undefined) {\n          // first call\n          promise = this.queryMessages({\n            limit,\n            beforeTime,\n            beforeMessageId,\n          });\n        } else {\n          promise = promise.then(prevMessages => {\n            if (prevMessages.length === 0 || prevMessages.length < limit) {\n              // no more messages\n              return [];\n            }\n            return this.queryMessages({\n              beforeTime: prevMessages[0].timestamp,\n              beforeMessageId: prevMessages[0].id,\n              limit,\n            });\n          });\n        }\n        return promise.then(value => ({\n          value: Array.from(value),\n          done: value.length === 0 || value.length < limit,\n        }));\n      },\n    };\n  }\n\n  /**\n   * 将该会话标记为已读\n   * @return {Promise.<Conversation>} self\n   */\n  markAsRead() {\n    return this._client.markAllAsRead([this]).then(() => this);\n  }\n}\n","import { default as d } from 'debug';\nconst debug = d('LC:ConversationQuery');\n\nexport default class ConversationQuery {\n  static _encode(value) {\n    if (value instanceof Date) {\n      return { __type: 'Date', iso: value.toJSON() };\n    }\n    if (value instanceof RegExp) {\n      return value.source;\n    }\n    return value;\n  }\n\n  static _quote(s) {\n    return `\\\\Q${s.replace('\\\\E', '\\\\E\\\\\\\\E\\\\Q')}\\\\E`;\n  }\n\n  static _calculateFlag(options) {\n    return [\n      'withLastMessagesRefreshed',\n      'compact',\n    ].reduce(\n      (prev, key) => (prev << 1) + (Boolean)(options[key]),\n      0\n    );\n  }\n\n  /**\n   * Create a ConversationQuery\n   * @param  {IMClient} client\n   */\n  constructor(client) {\n    this._client = client;\n    this._where = {};\n    this._extraOptions = {};\n  }\n\n  _addCondition(key, condition, value) {\n    // Check if we already have a condition\n    if (!this._where[key]) {\n      this._where[key] = {};\n    }\n    this._where[key][condition] = this.constructor._encode(value);\n    return this;\n  }\n\n  toJSON() {\n    const json = {\n      where: this._where,\n      flag: this.constructor._calculateFlag(this._extraOptions),\n    };\n    if (typeof this._skip !== 'undefined') json.skip = this._skip;\n    if (typeof this._limit !== 'undefined') json.limit = this._limit;\n    debug(json);\n    return json;\n  }\n\n  /**\n   * 增加查询条件，指定聊天室的组员包含某些成员即可返回\n   * @param {string[]} peerIds - 成员 ID 列表\n   * @return {ConversationQuery} self\n   */\n  containsMembers(peerIds) {\n    return this.containsAll('m', peerIds);\n  }\n\n  /**\n   * 增加查询条件，指定聊天室的组员条件满足条件的才返回\n   *\n   * @param {string[]} - 成员 ID 列表\n   * @param {Boolean} includeSelf - 是否包含自己\n   * @return {ConversationQuery} self\n   */\n  withMembers(peerIds, includeSelf) {\n    const peerIdsSet = new Set(peerIds);\n    if (includeSelf) {\n      peerIdsSet.add(this._client.id);\n    }\n    this.sizeEqualTo('m', peerIdsSet.size);\n    return this.containsMembers(Array.from(peerIdsSet));\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  equalTo(key, value) {\n    this._where[key] = this.constructor._encode(value);\n    return this;\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足小于条件时即可返回\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  lessThan(key, value) {\n    return this._addCondition(key, '$lt', value);\n  }\n\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足小于等于条件时即可返回\n\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  lessThanOrEqualTo(key, value) {\n    return this._addCondition(key, '$lte', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足大于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n\n  greaterThan(key, value) {\n    return this._addCondition(key, '$gt', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足大于等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n\n  greaterThanOrEqualTo(key, value) {\n    return this._addCondition(key, '$gte', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足不等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  notEqualTo(key, value) {\n    return this._addCondition(key, '$ne', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值包含在指定值中时即可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  containedIn(key, values) {\n    return this._addCondition(key, '$in', values);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值不包含在指定值中时即可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  notContainsIn(key, values) {\n    return this._addCondition(key, '$nin', values);\n  }\n  /**\n   * 增加查询条件，当conversation的属性中对应的字段中的元素包含所有的值才可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  containsAll(key, values) {\n    return this._addCondition(key, '$all', values);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值包含此字符串即可返回\n   *\n   * @param {string} key\n   * @param {string} subString\n   * @return {ConversationQuery} self\n   */\n  contains(key, subString) {\n    return this._addCondition(key, '$regex', ConversationQuery._quote(subString));\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值以此字符串起始即可返回\n   *\n   * @param {string} key\n   * @param {string} prefix\n   * @return {ConversationQuery} self\n   */\n  startsWith(key, prefix) {\n    return this._addCondition(key, '$regex', `^${ConversationQuery._quote(prefix)}`);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值以此字符串结束即可返回\n   *\n   * @param {string} key\n   * @param {string} suffix\n   * @return {ConversationQuery} self\n   */\n  endsWith(key, suffix) {\n    return this._addCondition(key, '$regex', `${ConversationQuery._quote(suffix)}$`);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值满足提供的正则表达式即可返回\n   *\n   * @param {string} key\n   * @param {RegExp} regex\n   * @return {ConversationQuery} self\n   */\n  matches(key, regex) {\n    this._addCondition(key, '$regex', regex);\n    // Javascript regex options support mig as inline options but store them\n    // as properties of the object. We support mi & should migrate them to\n    // modifiers\n    let _modifiers = '';\n    if (regex.ignoreCase) { _modifiers += 'i'; }\n    if (regex.multiline) { _modifiers += 'm'; }\n\n    if (_modifiers && _modifiers.length) {\n      this._addCondition(key, '$options', _modifiers);\n    }\n    return this;\n  }\n\n  /**\n   * 添加查询约束条件，查找 key 类型是数组，该数组的长度匹配提供的数值\n   *\n   * @param {string} key\n   * @param {Number} length\n   * @return {ConversationQuery} self\n   */\n  sizeEqualTo(key, length) {\n    return this._addCondition(key, '$size', length);\n  }\n\n  /**\n   * 设置返回集合的大小上限\n   *\n   * @param {Number} limit - 上限\n   * @return {ConversationQuery} self\n   */\n  limit(limit) {\n    this._limit = limit;\n    return this;\n  }\n\n  /**\n   * 设置返回集合的起始位置，一般用于分页\n   *\n   * @param {Number} skip - 起始位置跳过几个对象\n   * @return {ConversationQuery} self\n   */\n  skip(skip) {\n    this._skip = skip;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定key进行增序排列\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  ascending(key) {\n    this._order = key;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定key进行增序排列，如果已设置其他排序，原排序的优先级较高\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  addAscending(key) {\n    if (this._order) {\n      this._order += `,${key}`;\n    } else {\n      this._order = key;\n    }\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定 key 进行降序排列\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  descending(key) {\n    this._order = `-${key}`;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定 key 进行降序排列，如果已设置其他排序，原排序的优先级较高\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  addDescending(key) {\n    if (this._order) {\n      this._order += `,-${key}`;\n    } else {\n      this._order = `-${key}`;\n    }\n    return key;\n  }\n\n  /**\n   * 设置返回的 conversations 刷新最后一条消息\n   * @param  {Boolean} [enabled=true]\n   * @return {ConversationQuery} self\n   */\n  withLastMessagesRefreshed(enabled = true) {\n    this._extraOptions.withLastMessagesRefreshed = enabled;\n    return this;\n  }\n\n  /**\n   * @deprecated 请替换为 {@link ConversationQuery#withLastMessagesRefreshed}\n   * @param  {Boolean} [enabled=true]\n   * @return {ConversationQuery} self\n   */\n  withLastMessages(enabled) {\n    console.warn('DEPRECATION ConversationQuery#withLastMessages: ' +\n      'Use ConversationQuery#withLastMessagesRefreshed instead.');\n    return this.withLastMessagesRefreshed(enabled);\n  }\n\n  /**\n   * 设置返回的 conversations 为精简模式，即不含成员列表\n   * @param  {Boolean} [enabled=true]\n   * @return {ConversationQuery} self\n   */\n  compact(enabled = true) {\n    this._extraOptions.compact = enabled;\n    return this;\n  }\n\n  /**\n   * 执行查询\n   * @return {Promise.<Conversation[]>}\n   */\n  find() {\n    return this._client._executeQuery(this);\n  }\n}\n","import Client from './client';\nimport Conversation from './conversation';\nimport ConversationQuery from './conversation-query';\nimport {\n  GenericCommand,\n  SessionCommand,\n  ConvCommand,\n  AckCommand,\n  JsonObjectMessage,\n  ReadCommand,\n  ReadTuple,\n  CommandType,\n  OpType,\n} from '../proto/message';\nimport * as Errors from './errors';\nimport throttle from 'lodash/throttle';\nimport { tap, Cache, keyRemap, union, difference, trim } from './utils';\nimport { run as runSignatureFactory } from './signature-factory-runner';\nimport { default as d } from 'debug';\nimport { version as VERSION } from '../package.json';\n\nconst debug = d('LC:IMClient');\n\nexport default class IMClient extends Client {\n  /**\n   * 无法直接实例化，请使用 {@link Realtime#createIMClient} 创建新的 IMClient。\n   *\n   * @param  {String} [id] 客户端 id\n   * @param  {Object} [options]\n   * @param  {Function} [options.signatureFactory] open session 时的签名方法 // TODO need details\n   * @param  {Function} [options.conversationSignatureFactory] 对话创建、增减成员操作时的签名方法\n   */\n  constructor(...args) {\n    /**\n     * @var id {String} 客户端 id\n     * @memberof IMClient#\n     */\n    super(...args);\n    if (!this._messageParser) {\n      throw new Error('IMClient must be initialized with a MessageParser');\n    }\n    this._conversationCache = new Cache(`client:${this.id}`);\n    this._ackMessageBuffer = {};\n    [\n      'invited',\n      'kicked',\n      'membersjoined',\n      'membersleft',\n      'message',\n      'unreadmessages',\n      'close',\n      'conflict',\n      'unhandledmessage',\n    ].forEach(event => this.on(\n      event,\n      payload => this._debug(`${event} event emitted.`, payload)\n    ));\n  }\n\n  _debug(...params) {\n    debug(...params, `[${this.id}]`);\n  }\n\n  /**\n   * @override\n   * @private\n   */\n  _dispatchMessage(message) {\n    this._debug(trim(message), 'received');\n    switch (message.cmd) {\n      case CommandType.conv:\n        return this._dispatchConvMessage(message);\n      case CommandType.direct:\n        return this._dispatchDirectMessage(message);\n      case CommandType.session:\n        return this._dispatchSessionMessage(message);\n      case CommandType.unread:\n        return this._dispatchUnreadMessage(message);\n      default:\n        this.emit('unhandledmessage', message);\n        return Promise.resolve();\n    }\n  }\n\n  _dispatchSessionMessage(message) {\n    const {\n      sessionMessage: {\n        code, reason,\n      },\n    } = message;\n    switch (message.op) {\n      case OpType.closed: {\n        if (code === Errors.SESSION_CONFLICT.code) {\n          /**\n           * 用户在其他客户端登录，当前客户端被服务端强行下线。详见文档「单点登录」章节。\n           * @event IMClient#conflict\n           */\n          return this.emit('conflict', {\n            reason,\n          });\n        }\n        /**\n         * 当前客户端被服务端强行下线\n         * @event IMClient#close\n         * @param {Object} payload\n         * @param {Number} payload.code 错误码\n         * @param {String} payload.reason 原因\n         */\n        return this.emit('close', {\n          code, reason,\n        });\n      }\n      default:\n        this.emit('unhandledmessage', message);\n        return Promise.reject(new Error('Unrecognized session command'));\n    }\n  }\n\n  _dispatchUnreadMessage(message) {\n    const convs = message.unreadMessage.convs;\n    return Promise.all(convs.map(\n      conv => this\n        .getConversation(conv.cid)\n        .then(conversation => {\n          let timestamp;\n          if (conv.timestamp) {\n            timestamp = new Date(conv.timestamp.toNumber());\n          }\n          conversation.unreadMessagesCount = conv.unread; // eslint-disable-line no-param-reassign\n          /**\n           * 未读消息数目更新\n           * @event IMClient#unreadmessages\n           * @param {Object} payload\n           * @param {Number} payload.count 未读消息数\n           * @param {String} [payload.lastMessageId] 最新一条未读消息 id\n           * @param {String} [payload.lastMessageTimestamp] 最新一条未读消息时间戳\n           * @param {Conversation} conversation 未读消息数目有更新的对话\n           */\n          this.emit('unreadmessages', {\n            count: conv.unread,\n            lastMessageId: conv.mid,\n            lastMessageTimestamp: timestamp,\n          }, conversation);\n        })\n    ));\n  }\n\n  _dispatchConvMessage(message) {\n    const {\n      convMessage,\n      convMessage: {\n        initBy, m,\n      },\n    } = message;\n    switch (message.op) {\n      case OpType.joined: {\n        return this.getConversation(convMessage.cid).then(conversation => {\n          if (!conversation.transient) {\n            // eslint-disable-next-line no-param-reassign\n            conversation.members = union(conversation.members, [this.id]);\n          }\n          const payload = {\n            invitedBy: initBy,\n          };\n          /**\n           * 当前用户被添加至某个对话\n           * @event IMClient#invited\n           * @param {Object} payload\n           * @param {String} payload.invitedBy 邀请者 id\n           * @param {Conversation} conversation\n           */\n          this.emit('invited', payload, conversation);\n          /**\n           * 当前用户被添加至当前对话\n           * @event Conversation#invited\n           * @param {Object} payload\n           * @param {String} payload.invitedBy 该移除操作的发起者 id\n           */\n          conversation.emit('invited', payload);\n        });\n      }\n      case OpType.left: {\n        return this.getConversation(convMessage.cid).then(conversation => {\n          if (!conversation.transient) {\n            // eslint-disable-next-line no-param-reassign\n            conversation.members = difference(conversation.members, [this.id]);\n          }\n          const payload = {\n            kickedBy: initBy,\n          };\n          /**\n           * 当前用户被从某个对话中移除\n           * @event IMClient#kicked\n           * @param {Object} payload\n           * @param {String} payload.kickedBy 该移除操作的发起者 id\n           * @param {Conversation} conversation\n           */\n          this.emit('kicked', payload, conversation);\n          /**\n           * 当前用户被从当前对话中移除\n           * @event Conversation#kicked\n           * @param {Object} payload\n           * @param {String} payload.kickedBy 该移除操作的发起者 id\n           */\n          conversation.emit('kicked', payload);\n        });\n      }\n      case OpType.members_joined: {\n        return this.getConversation(convMessage.cid).then(conversation => {\n          if (!conversation.transient) {\n            // eslint-disable-next-line no-param-reassign\n            conversation.members = union(conversation.members, convMessage.m);\n          }\n          const payload = {\n            invitedBy: initBy,\n            members: m,\n          };\n          /**\n           * 有用户被添加至某个对话\n           * @event IMClient#memberjoined\n           * @param {Object} payload\n           * @param {String[]} payload.members 被添加的用户 id 列表\n           * @param {String} payload.invitedBy 邀请者 id\n           * @param {Conversation} conversation\n           */\n          this.emit('membersjoined', payload, conversation);\n          /**\n           * 有成员被添加至当前对话\n           * @event Conversation#memberjoined\n           * @param {Object} payload\n           * @param {String[]} payload.members 被添加的成员 id 列表\n           * @param {String} payload.invitedBy 邀请者 id\n           */\n          conversation.emit('membersjoined', payload);\n        });\n      }\n      case OpType.members_left: {\n        return this.getConversation(convMessage.cid).then(conversation => {\n          if (!conversation.transient) {\n            // eslint-disable-next-line no-param-reassign\n            conversation.members = difference(conversation.members, convMessage.m);\n          }\n          const payload = {\n            kickedBy: initBy,\n            members: m,\n          };\n          /**\n           * 有成员被从某个对话中移除\n           * @event IMClient#memberleft\n           * @param {Object} payload\n           * @param {String[]} payload.members 被移除的成员 id 列表\n           * @param {String} payload.kickedBy 该移除操作的发起者 id\n           * @param {Conversation} conversation\n           */\n          this.emit('membersleft', payload, conversation);\n          /**\n           * 有成员被从当前对话中移除\n           * @event Conversation#memberleft\n           * @param {Object} payload\n           * @param {String[]} payload.members 被移除的成员 id 列表\n           * @param {String} payload.kickedBy 该移除操作的发起者 id\n           */\n          conversation.emit('membersleft', payload);\n        });\n      }\n      default:\n        this.emit('unhandledmessage', message);\n        return Promise.reject(new Error('Unrecognized conversation command'));\n    }\n  }\n\n  _dispatchDirectMessage(originalMessage) {\n    const {\n      directMessage,\n      directMessage: {\n        id, cid, fromPeerId, timestamp, transient,\n      },\n    } = originalMessage;\n    return this.getConversation(directMessage.cid).then(conversation => {\n      const messageProps = {\n        id,\n        cid,\n        timestamp: new Date(timestamp.toNumber()),\n        from: fromPeerId,\n        transient,\n      };\n      const message = this._messageParser.parse(directMessage.msg);\n      Object.assign(message, messageProps);\n      conversation.lastMessage = message; // eslint-disable-line no-param-reassign\n      conversation.lastMessageAt = message.timestamp; // eslint-disable-line no-param-reassign\n      conversation.unreadMessagesCount++; // eslint-disable-line no-param-reassign\n      /**\n       * 当前用户收到消息\n       * @event IMClient#message\n       * @param {Message} message\n       * @param {Conversation} conversation 收到消息的对话\n       */\n      this.emit('message', message, conversation);\n      /**\n       * 当前对话收到消息\n       * @event Conversation#message\n       * @param {Message} message\n       */\n      conversation.emit('message', message);\n      if (!(transient || conversation.transient)) {\n        this._sendAck(message);\n      }\n    });\n  }\n\n  _sendAck(message) {\n    this._debug('send ack for', message);\n    const { cid } = message;\n    if (!cid) {\n      return Promise.reject(new Error('missing cid'));\n    }\n    if (!this._ackMessageBuffer[cid]) {\n      this._ackMessageBuffer[cid] = [];\n    }\n    this._ackMessageBuffer[cid].push(message);\n    if (!this._doSendAckThrottled) {\n      this._doSendAckThrottled = throttle(this._doSendAck.bind(this), 1000);\n    }\n    return this._doSendAckThrottled();\n  }\n\n  _doSendAck() {\n    if (!this._connection.is('connected')) {\n      // if not connected, just skip everything\n      return Promise.resolve();\n    }\n    debug('do send ack', this._ackMessageBuffer);\n    return Promise.all(Object.keys(this._ackMessageBuffer).map(cid => {\n      const convAckMessages = this._ackMessageBuffer[cid];\n      const timestamps = convAckMessages.map(message => message.timestamp);\n      const command = new GenericCommand({\n        cmd: 'ack',\n        ackMessage: new AckCommand({\n          cid,\n          fromts: Math.min.apply(null, timestamps),\n          tots: Math.max.apply(null, timestamps),\n        }),\n      });\n      return this._send(command, false)\n        .then(() => delete this._ackMessageBuffer[cid])\n        .catch(error => console.warn('send ack failed:', error));\n    }));\n  }\n\n  _send(cmd, ...args) {\n    const command = cmd;\n    if (this.id) {\n      command.peerId = this.id;\n    }\n    return this._connection.send(command, ...args);\n  }\n\n  _open(appId, tag, deviceId, isReconnect = false) {\n    this._debug('open session');\n    return Promise\n      .resolve(new GenericCommand({\n        cmd: 'session',\n        op: 'open',\n        appId,\n        sessionMessage: new SessionCommand({\n          ua: `js/${VERSION}`,\n          r: isReconnect,\n          tag,\n          deviceId,\n        }),\n      }))\n      .then(command => {\n        if (this.options.signatureFactory) {\n          return runSignatureFactory(this.options.signatureFactory, [this.id])\n            .then(signatureResult => {\n              Object.assign(command.sessionMessage, keyRemap({\n                signature: 's',\n                timestamp: 't',\n                nonce: 'n',\n              }, signatureResult));\n              return command;\n            });\n        }\n        return command;\n      })\n      .then(this._send.bind(this))\n      .then(resCommand => {\n        const peerId = resCommand.peerId;\n        if (!peerId) {\n          console.warn('Unexpected session opened without peerId.');\n          return;\n        }\n        this.id = peerId;\n      });\n  }\n\n  /**\n   * 关闭客户端\n   * @return {Promise}\n   */\n  close() {\n    this._debug('close session');\n    const command = new GenericCommand({\n      cmd: 'session',\n      op: 'close',\n    });\n    return this._send(command).then(\n      () => {\n        this.emit('close', {\n          code: 0,\n        });\n      }\n    );\n  }\n  /**\n   * 获取 client 列表中在线的 client，每次查询最多 20 个 clientId，超出部分会被忽略\n   * @param  {String[]} clientIds 要查询的 client ids\n   * @return {Primse.<String[]>} 在线的 client ids\n   */\n  ping(clientIds) {\n    this._debug('ping');\n    if (!(clientIds instanceof Array)) {\n      throw new TypeError(`clientIds ${clientIds} is not an Array`);\n    }\n    if (!clientIds.length) {\n      return Promise.resolve([]);\n    }\n    const command = new GenericCommand({\n      cmd: 'session',\n      op: 'query',\n      sessionMessage: new SessionCommand({\n        sessionPeerIds: clientIds,\n      }),\n    });\n    return this._send(command)\n      .then(resCommand => resCommand.sessionMessage.onlineSessionPeerIds);\n  }\n\n  /**\n   * 获取某个特定的 conversation\n   * @param  {String} id 对话 id，对应 _Conversation 表中的 objectId\n   * @param  {Boolean} [noCache=false] 强制不从缓存中获取\n   * @return {Promise.<Conversation>}\n   */\n  getConversation(id, noCache = false) {\n    if (typeof id !== 'string') {\n      throw new TypeError(`${id} is not a String`);\n    }\n    if (!noCache) {\n      const cachedConversation = this._conversationCache.get(id);\n      if (cachedConversation) {\n        return Promise.resolve(cachedConversation);\n      }\n    }\n    return this\n      .getQuery()\n      .equalTo('objectId', id)\n      .find()\n      .then(conversations => conversations[0] || null);\n  }\n\n  /**\n   * 构造一个 ConversationQuery 来查询对话\n   * @return {ConversationQuery}\n   */\n  getQuery() {\n    return new ConversationQuery(this);\n  }\n\n  _executeQuery(query) {\n    const queryJSON = query.toJSON();\n    queryJSON.where = new JsonObjectMessage({\n      data: JSON.stringify(queryJSON.where),\n    });\n    const command = new GenericCommand({\n      cmd: 'conv',\n      op: 'query',\n      convMessage: new ConvCommand(queryJSON),\n    });\n    return this\n      ._send(command)\n      .then(resCommand => {\n        try {\n          return JSON.parse(resCommand.convMessage.results.data);\n        } catch (error) {\n          const commandString = JSON.stringify(trim(resCommand));\n          throw new Error(`Parse query result failed: ${error.message}. Command: ${commandString}`);\n        }\n      })\n      .then(conversations => conversations.map(this._parseConversationFromRawData.bind(this)))\n      .then(conversations => conversations.map(fetchedConversation => {\n        let conversation = this._conversationCache.get(fetchedConversation.id);\n        if (!conversation) {\n          conversation = fetchedConversation;\n          this._debug('no match, set cache');\n          this._conversationCache.set(fetchedConversation.id, fetchedConversation);\n        } else {\n          this._debug('update cached conversation');\n          [\n            '_name',\n            'creator',\n            'createdAt',\n            'updatedAt',\n            'lastMessageAt',\n            'lastMessage',\n            'mutedMembers',\n            'members',\n            '_attributes',\n            'transient',\n            'muted',\n          ].forEach(key => {\n            const value = fetchedConversation[key];\n            if (value !== undefined) conversation[key] = value;\n          });\n          delete conversation._pendingAttributes;\n          delete conversation._pendingName;\n        }\n        return conversation;\n      }));\n  }\n\n  _parseConversationFromRawData(rawData) {\n    const data = keyRemap({\n      objectId: 'id',\n      lm: 'lastMessageAt',\n      msg: 'lastMessage',\n      msg_from: 'lastMessageFrom',\n      msg_mid: 'lastMessageId',\n      msg_timestamp: 'lastMessageTimestamp',\n      m: 'members',\n      attr: 'attributes',\n      tr: 'transient',\n      c: 'creator',\n      mu: 'mutedMembers',\n    }, rawData);\n    if (data.lastMessage) {\n      data.lastMessage = this._messageParser.parse(data.lastMessage);\n      data.lastMessage.from = data.lastMessageFrom;\n      data.lastMessage.id = data.lastMessageId;\n      data.lastMessage.timestamp = new Date(data.lastMessageTimestamp);\n      delete data.lastMessageFrom;\n      delete data.lastMessageId;\n      delete data.lastMessageTimestamp;\n    }\n    return new Conversation(data, this);\n  }\n\n  /**\n   * 创建一个 conversation\n   * @param {Object} options\n   * @param {String[]} options.members 对话的初始成员列表，默认包含当前 client\n   * @param {String} [options.name] 对话的名字\n   * @param {Object} [options.attributes] 额外属性\n   * @param {Boolean} [options.transient=false] 暂态会话\n   * @param {Boolean} [options.unique=false] 唯一对话，当其为 true 时，如果当前已经有相同成员的对话存在则返回该对话，否则会创建新的对话\n   * @return {Promise.<Conversation>}\n   */\n  createConversation(options = {}) {\n    let attr = {};\n    let {\n      members,\n    } = options;\n    const {\n      name,\n      attributes,\n      transient,\n      unique,\n    } = options;\n    if (!(transient || Array.isArray(members))) {\n      throw new TypeError(`conversation members ${members} is not an array`);\n    }\n    members = new Set(members);\n    members.add(this.id);\n    members = Array.from(members).sort();\n    if (name) {\n      if (typeof name !== 'string') {\n        throw new TypeError(`conversation name ${name} is not a string`);\n      }\n      attr.name = name;\n    }\n    if (attributes) {\n      attr.attr = attributes;\n    }\n    attr = new JsonObjectMessage({\n      data: JSON.stringify(attr),\n    });\n\n    const startCommandJson = {\n      m: members,\n      attr,\n      transient,\n      unique,\n    };\n\n    return Promise.resolve(\n        new GenericCommand({\n          cmd: 'conv',\n          op: 'start',\n          convMessage: new ConvCommand(startCommandJson),\n        })\n      )\n      .then(command => {\n        if (this.options.conversationSignatureFactory) {\n          const params = [null, this.id, members, 'create'];\n          return runSignatureFactory(this.options.conversationSignatureFactory, params)\n            .then(signatureResult => {\n              Object.assign(command.convMessage, keyRemap({\n                signature: 's',\n                timestamp: 't',\n                nonce: 'n',\n              }, signatureResult));\n              return command;\n            });\n        }\n        return command;\n      })\n      .then(this._send.bind(this))\n      .then(resCommand => new Conversation(Object.assign({}, options, {\n        id: resCommand.convMessage.cid,\n        createdAt: resCommand.convMessage.cdate,\n        updatedAt: resCommand.convMessage.cdate,\n        lastMessageAt: null,\n        creator: this.id,\n        members: transient ? [] : members,\n      }), this))\n      .then(tap(conversation =>\n        this._conversationCache.set(conversation.id, conversation)\n      ));\n  }\n\n  /**\n   * 将指定的所有会话标记为已读\n   *\n   * @param {Conversation[]} conversations 指定的会话列表\n   * @return {Promise.<Conversation[]>} conversations 返回输入的会话列表\n   */\n  markAllAsRead(conversations) {\n    if (!Array.isArray(conversations)) {\n      throw new TypeError(`${conversations} is not an Array`);\n    }\n    const ids = conversations.map(conversation => {\n      if (!(conversation instanceof Conversation)) {\n        throw new TypeError(`${conversation} is not a Conversation`);\n      }\n      return conversation.id;\n    });\n    this._debug(`mark [${ids}] as read`);\n    if (!conversations.length) {\n      return Promise.resolve([]);\n    }\n    return this._send(new GenericCommand({\n      cmd: 'read',\n      readMessage: new ReadCommand({\n        convs: conversations.map(conversation => new ReadTuple({\n          cid: conversation.id,\n          timestamp: (conversation.lastMessageAt || new Date()).getTime(),\n        })),\n      }),\n    }), false).then(() => {\n      // eslint-disable-next-line no-param-reassign\n      conversations.forEach(conversation => (conversation.unreadMessagesCount = 0));\n      return conversations;\n    });\n  }\n}\n","import { default as d } from 'debug';\nimport isPlainObject from 'lodash/isPlainObject';\n\nconst debug = d('LC:MessageParser');\n\nexport default class MessageParser {\n  constructor() {\n    this._messageClasses = [];\n  }\n\n  register(messageClass) {\n    if (\n      messageClass &&\n      messageClass.parse &&\n      messageClass.prototype &&\n      messageClass.prototype.toJSON\n    ) {\n      this._messageClasses.unshift(messageClass);\n    } else {\n      throw new TypeError('Invalid messageClass');\n    }\n  }\n\n  parse(text) {\n    debug('parsing message:', text);\n    let content;\n    try {\n      content = JSON.parse(text);\n    } catch (error) {\n      content = text;\n    }\n    for (const Klass of this._messageClasses) {\n      const contentCopy = isPlainObject(content) ? Object.assign({}, content) : content;\n      let valid;\n      let result;\n      try {\n        valid = Klass.validate(contentCopy);\n      } catch (error) {\n        // eslint-disable-line no-empty\n      }\n      if (valid) {\n        try {\n          result = Klass.parse(contentCopy);\n        } catch (error) {\n          console.warn('parsing a valid message content error', {\n            error,\n            Klass,\n            content: contentCopy,\n          });\n        }\n        if (result !== undefined) {\n          debug('parse result:', result);\n          return result;\n        }\n      }\n    }\n    throw new Error('No Message Class matched');\n  }\n}\n","/* eslint-disable no-param-reassign */\nimport { getStaticProperty, isIE10 } from '../utils';\n\n/**\n * @namespace MessageHelper\n * @example\n * // 这是一个虚拟的 namespace，以下所有 members 请直接 import from 'leancloud-realtime'\nimport { messageType } from 'leancloud-realtime';\n */\n\n/**\n * decorator，定义消息类的类型常量\n * @function\n * @memberof MessageHelper\n * @param {Number} type 自定义类型请使用正整数\n * @example @messageType(1)\n * class CustomMessage extends TypedMessage {}\n *\n * // 不支持 decorator 的情况下可以这样使用\n * class CustomMessage extends TypedMessage {\n *   //...\n * }\n * messageType(1)(CustomMessage);\n */\nexport const messageType = type => {\n  if (typeof type !== 'number') {\n    throw new TypeError(`${type} is not a Number`);\n  }\n  return target => {\n    target.TYPE = type;\n    target.validate = json => (json._lctype === type);\n    target.prototype._getType = () => ({ _lctype: type });\n  };\n};\n\n/**\n * decorator，定义消息类的自定义字段\n * @function\n * @memberof MessageHelper\n * @param {String[]} fields 自定义字段\n * @example @messageField(['foo'])\n * class CustomMessage extends TypedMessage {\n *   constructor(foo) {\n *     super();\n *     this.foo = foo;\n *   }\n * }\n *\n * // 不支持 decorator 的情况下可以这样使用\n * class CustomMessage extends TypedMessage {\n *   constructor(foo) {\n *     super();\n *     this.foo = foo;\n *   }\n *   //...\n * }\n * messageField(['foo'])(CustomMessage);\n */\nexport const messageField = fields => {\n  if (typeof fields !== 'string') {\n    if (!Array.isArray(fields)) {\n      throw new TypeError(`${fields} is not an Array`);\n    } else {\n      if (fields.some(value => typeof value !== 'string')) {\n        throw new TypeError('fields contains non-string typed member');\n      }\n    }\n  }\n  return target => {\n    // IE10 Hack:\n    // static properties in IE10 will not be inherited from super\n    // search for parse method and assign it manually\n    let originalCustomFields = isIE10\n      ? getStaticProperty(target, '_customFields')\n      : target._customFields;\n    originalCustomFields = Array.isArray(originalCustomFields)\n      ? originalCustomFields : [];\n    target._customFields = originalCustomFields.concat(fields);\n  };\n};\n\n// IE10 Hack:\n// static properties in IE10 will not be inherited from super\n// search for parse method and assign it manually\n\nexport const IE10Compatible = target => {\n  if (isIE10) {\n    target.parse = getStaticProperty(target, 'parse');\n  }\n};\n","import Message from './message';\nimport { messageField } from './helpers';\nimport { getStaticProperty, isIE10 } from '../utils';\n\n// jsdoc-ignore-start\n@messageField(['_lctext', '_lcattrs'])\n// jsdoc-ignore-end\nexport default class TypedMessage extends Message {\n  /**\n   * 所有内置的富媒体消息均继承自本类\n   * @extends Message\n   */\n  constructor() {\n    super();\n    this._ = {};\n  }\n\n  /**\n   * @type {Number}\n   * @readonly\n   */\n  get type() {\n    return this.constructor.TYPE;\n  }\n\n  /** @type {String} */\n  set text(text) {\n    return this.setText(text);\n  }\n  get text() {\n    return this.getText();\n  }\n\n  /** @type {Object} */\n  set attributes(attributes) {\n    return this.setAttributes(attributes);\n  }\n  get attributes() {\n    return this.getAttributes();\n  }\n\n  /**\n   * @param {String} text\n   * @return {TypedMessage} self\n   */\n  setText(text) {\n    this._lctext = text;\n    return this;\n  }\n  /**\n   * @return {String}\n   */\n  getText() {\n    return this._lctext;\n  }\n\n  /**\n   * @param {Object} attributes\n   * @return {TypedMessage} self\n   */\n  setAttributes(attributes) {\n    this._lcattrs = attributes;\n    return this;\n  }\n  /**\n   * @return {Object}\n   */\n  getAttributes() {\n    return this._lcattrs;\n  }\n\n  _getCustomFields() {\n    const fields = Array.isArray(this.constructor._customFields)\n      ? this.constructor._customFields : [];\n    return fields.reduce((result, field) => {\n      if (typeof field !== 'string') return result;\n      result[field] = this[field]; // eslint-disable-line no-param-reassign\n      return result;\n    }, {});\n  }\n\n  _getType() {\n    throw new Error('not implemented');\n  }\n\n  toJSON() {\n    return Object.assign({\n      _lctext: this.getText(),\n      _lcattrs: this.getAttributes(),\n    }, this._getCustomFields(), this._getType());\n  }\n\n  /**\n   * 解析处理消息内容\n   * <pre>\n   * 为给定的 message 设置 text 与 attributes 属性，返回该 message\n   * 如果子类没有提供 message，new this()\n   * @protected\n   * @param  {Object}  json    json 格式的消息内容\n   * @param  {TypedMessage} message 子类提供的 message\n   * @return {TypedMessage}\n   * @implements AVMessage.parse\n   */\n  static parse(json, message = new this()) {\n    message.content = json; // eslint-disable-line no-param-reassign\n    const customFields = isIE10\n      ? getStaticProperty(message.constructor, '_customFields')\n      : message.constructor._customFields;\n    let fields = Array.isArray(customFields) ? customFields : [];\n    fields = fields.reduce((result, field) => {\n      if (typeof field !== 'string') return result;\n      result[field] = json[field]; // eslint-disable-line no-param-reassign\n      return result;\n    }, {});\n    Object.assign(message, fields);\n    return super.parse(json, message);\n  }\n}\n","import TypedMessage from './typed-message';\nimport { messageType, IE10Compatible } from './helpers';\n\n// jsdoc-ignore-start\n@messageType(-1)\n@IE10Compatible\n// jsdoc-ignore-end\nexport default class TextMessage extends TypedMessage {\n  /**\n   * 文类类型消息\n   * @extends TypedMessage\n   * @param  {String} [text='']\n   * @throws {TypeError} text 不是 String 类型\n   */\n  constructor(text = '') {\n    if (typeof text !== 'string') {\n      throw new TypeError(`${text} is not a string`);\n    }\n    super();\n    this.setText(text);\n  }\n}\n\n/**\n * @name TYPE\n * @memberof TextMessage\n * @type Number\n * @static\n * @const\n */\n","import Connection from './connection';\nimport * as Errors from './errors';\nimport { default as d } from 'debug';\nimport EventEmitter from 'eventemitter3';\nimport axios from 'axios';\nimport uuid from 'uuid';\nimport { tap, Cache, trim, internal } from './utils';\nimport Client from './client';\nimport IMClient from './im-client';\nimport MessageParser from './message-parser';\nimport Message from './messages/message';\nimport TextMessage from './messages/text-message';\n\nconst debug = d('LC:Realtime');\n\nconst pushRouterCache = new Cache('push-router');\n\nexport default class Realtime extends EventEmitter {\n  /**\n   * @param  {Object} options\n   * @param  {String} options.appId\n   * @param  {String} [options.region='cn'] 节点 id\n   * @param  {Boolean} [options.pushOfflineMessages=false] 启用推送离线消息模式（默认为发送未读消息通知模式）\n   * @param  {Boolean} [options.noBinary=false] 设置 WebSocket 使用字符串格式收发消息（默认为二进制格式）。\n   *                                            适用于 WebSocket 实现不支持二进制数据格式的情况（如 React Native）\n   * @param  {Boolean} [options.ssl=true] 使用 wss 进行连接\n   */\n  constructor(options) {\n    debug('initializing Realtime');\n    super();\n    if (typeof options.appId !== 'string') {\n      throw new TypeError(`appId [${options.appId}] is not a string`);\n    }\n    this._options = Object.assign({\n      appId: undefined,\n      region: 'cn',\n      pushOfflineMessages: false,\n      ssl: true,\n    }, options);\n    this._id = uuid.v4();\n    this._cache = new Cache('endpoints');\n    this._clients = {};\n    this._messageParser = new MessageParser();\n    this.register([\n      Message,\n      TextMessage,\n    ]);\n  }\n\n  _open() {\n    if (this._openPromise) return this._openPromise;\n\n    let format = 'protobuf';\n    if (this._options.noBinary) {\n      // 不发送 binary data，fallback to base64 string\n      format = 'protobase64';\n    }\n    let version = 3;\n    if (this._options.pushOfflineMessages) {\n      // 不推送离线消息，而是发送对话的未读通知\n      version = 1;\n    }\n    const protocol = {\n      format,\n      version,\n    };\n    this._openPromise = new Promise((resolve, reject) => {\n      debug('No connection established, create a new one.');\n      const connection = new Connection(\n        () => this._getEndpoints(this._options),\n        protocol\n      );\n      connection.binaryType = 'arraybuffer';\n      connection.on('open', () => resolve(connection));\n      connection.on('error', reject);\n      connection.on('message', this._dispatchMessage.bind(this));\n      /**\n       * 网络连接断开\n       * @event Realtime#disconnect\n       */\n      /**\n       * 计划在一段时间后尝试重新连接\n       * @event Realtime#retry\n       * @param {Number} attempt 尝试重连的次数\n       * @param {Number} delay 延迟的毫秒数\n       */\n      /**\n       * 正在尝试重新连接\n       * @event Realtime#retry\n       * @param {Number} attempt 尝试重连的次数\n       */\n      /**\n       * 网络连接恢复正常\n       * @event Realtime#reconnect\n       */\n      // event proxy\n      ['disconnect', 'reconnect', 'retry', 'schedule'].forEach(\n        event => connection.on(event, (...payload) => {\n          debug(`${event} event emitted.`, ...payload);\n          this.emit(event, ...payload);\n        })\n      );\n      // override handleClose\n      connection.handleClose = function handleClose(event) {\n        // CAUTION: non-standard API, provided by core-js\n        const fatalError = Array.find([\n          Errors.APP_NOT_AVAILABLE,\n          Errors.INVALID_LOGIN,\n          Errors.INVALID_ORIGIN,\n        ], error => error.code === event.code);\n        if (fatalError) {\n          // in these cases, SDK should throw.\n          const error = new Error(`${fatalError.message || event.reason}`);\n          error.code = event.code;\n          this.throw(error);\n        } else {\n          // reconnect\n          this.disconnect();\n        }\n      };\n      internal(this).connection = connection;\n    });\n\n    return this._openPromise;\n  }\n\n  _getEndpoints(options) {\n    return Promise.resolve(\n      this._cache.get('endpoints') ||\n      this\n        .constructor\n        ._fetchEndpointsInfo(options)\n        .then(\n          tap(info => this._cache.set('endpoints', info, info.ttl * 1000))\n        )\n    )\n    .then(info => {\n      debug('endpoint info:', info);\n      return [info.server, info.secondary];\n    });\n  }\n\n  static _fetchPushRouter({ appId, region }) {\n    debug('fetch router');\n    switch (region) {\n      case 'cn': {\n        const cachedPushRouter = pushRouterCache.get(appId);\n        if (cachedPushRouter) {\n          return Promise.resolve(cachedPushRouter);\n        }\n        return axios\n          .get('https://app-router.leancloud.cn/1/route', {\n            params: {\n              appId,\n            },\n            timeout: 20000,\n          })\n          .then(\n            res => res.data\n          )\n          .then(tap(debug))\n          .then(\n            route => {\n              const pushRouter = route.push_router_server;\n              if (!pushRouter) {\n                throw new Error('push router not exists');\n              }\n              let ttl = route.ttl;\n              if (typeof ttl !== 'number') {\n                ttl = 3600;\n              }\n              pushRouterCache.set(appId, pushRouter, ttl * 1000);\n              return pushRouter;\n            }\n          )\n          .catch(() => 'router-g0-push.leancloud.cn');\n      }\n      case 'us':\n        return Promise.resolve('router-a0-push.leancloud.cn');\n      default:\n        throw new Error(`Region [${region}] is not supported.`);\n    }\n  }\n\n  static _fetchEndpointsInfo({ appId, region, ssl, _debug }) {\n    debug('fetch endpoint info');\n    return this._fetchPushRouter({ appId, region })\n      .then(tap(debug))\n      .then(router =>\n        axios.get(`https://${router}/v1/route`, {\n          params: {\n            appId,\n            secure: ssl,\n            debug: _debug,\n            _t: Date.now(),\n          },\n          timeout: 20000,\n        })\n        .then(\n          res => res.data\n        )\n        .then(tap(debug))\n    );\n  }\n\n  _close() {\n    if (this._openPromise) {\n      this._openPromise.then(connection => connection.close());\n    }\n    delete this._openPromise;\n  }\n\n  /**\n   * 手动进行重连。\n   * SDK 在网络出现异常时会自动按照一定的时间间隔尝试重连，调用该方法会立即尝试重连并重置重连尝试计数器。\n   * 只能在 `schedule` 事件之后，`retry` 事件之前调用，如果当前网络正常或者正在进行重连，调用该方法会抛异常。\n   */\n  retry() {\n    const connection = internal(this).connection;\n    if (!connection) {\n      throw new Error('no connection established');\n    }\n    if (connection.cannot('retry')) {\n      throw new Error(\n        `retrying not allowed when not offline. the connection is now ${connection.current}`\n      );\n    }\n    return connection.retry();\n  }\n\n  _register(client) {\n    if (!(client instanceof Client)) {\n      throw new TypeError(`${client} is not a Client`);\n    }\n    if (!client.id) {\n      throw new Error('Client must have an id to be registered');\n    }\n    this._clients[client.id] = client;\n  }\n\n  _deregister(client) {\n    if (!(client instanceof Client)) {\n      throw new TypeError(`${client} is not a Client`);\n    }\n    if (!client.id) {\n      throw new Error('Client must have an id to be deregistered');\n    }\n    delete this._clients[client.id];\n    if (Object.getOwnPropertyNames(this._clients).length === 0) {\n      this._close();\n    }\n  }\n\n  _dispatchMessage(message) {\n    if (message.peerId !== null) {\n      const targetClient = this._clients[message.peerId];\n      if (targetClient) {\n        return Promise.resolve(targetClient)\n          .then(client => client._dispatchMessage(message))\n          .catch(debug);\n      }\n      return debug(\n        '[WARN] Unexpected message received without any live client match',\n        trim(message)\n      );\n    }\n    return debug('[WARN] Unexpected message received without peerId', trim(message));\n  }\n\n  /**\n   * 创建一个即时通讯客户端，多次创建相同 id 的客户端会返回同一个实例\n   * @param  {String} [id] 客户端 id，如果不指定，服务端会随机生成一个\n   * @param  {Object} [clientOptions] 详细参数 @see {@link IMClient}\n   * @param  {String} [tag] 客户端类型标记，以支持单点登录功能\n   * @return {Promise.<IMClient>}\n   */\n  createIMClient(id, clientOptions, tag) {\n    const idIsString = typeof id === 'string';\n    if (idIsString && this._clients[id] !== undefined) {\n      return Promise.resolve(this._clients[id]);\n    }\n    const promise = this._open().then(connection => {\n      const client = new IMClient(id, clientOptions, connection, {\n        _messageParser: this._messageParser,\n      });\n      connection.on('reconnect', () => client._open(this._options.appId, tag, this._id, true));\n      client.on('close', () => this._deregister(client), this);\n      return client._open(this._options.appId, tag, this._id)\n        .then(() => {\n          this._register(client);\n          return client;\n        });\n    });\n    if (idIsString) {\n      this._clients[id] = promise;\n    }\n    return promise;\n  }\n\n  createPushClient() {\n    return this._open();\n  }\n\n  /**\n   * 注册消息类\n   *\n   * 在接收消息、查询消息时，会按照消息类注册顺序的逆序依次尝试解析消息内容\n   *\n   * @param  {Function | Function[]} messageClass 消息类，需要实现 {@link AVMessage} 接口，\n   *                     \t\t\t\t\t\t\t\t\t\t\t\t\t建议继承自 {@link TypedMessage}\n   * @throws {TypeError} 如果 messageClass 没有实现 {@link AVMessage} 接口则抛出异常\n   */\n  register(messageClass) {\n    const messageClasses = [].concat(messageClass);\n    return messageClasses.map(this._messageParser.register.bind(this._messageParser));\n  }\n}\n"],"names":["debug","runSignatureFactory","Errors.SESSION_CONFLICT","VERSION","Errors.APP_NOT_AVAILABLE","Errors.INVALID_LOGIN","Errors.INVALID_ORIGIN"],"mappings":"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"}